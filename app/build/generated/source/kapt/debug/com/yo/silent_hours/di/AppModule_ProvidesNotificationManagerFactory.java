// Generated by Dagger (https://dagger.dev).
package com.yo.silent_hours.di;

import android.app.NotificationManager;
import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesNotificationManagerFactory implements Factory<NotificationManager> {
  private final Provider<Context> contextProvider;

  public AppModule_ProvidesNotificationManagerFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public NotificationManager get() {
    return providesNotificationManager(contextProvider.get());
  }

  public static AppModule_ProvidesNotificationManagerFactory create(
      Provider<Context> contextProvider) {
    return new AppModule_ProvidesNotificationManagerFactory(contextProvider);
  }

  public static NotificationManager providesNotificationManager(Context context) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesNotificationManager(context));
  }
}
